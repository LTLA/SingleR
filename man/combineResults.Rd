% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/combineResults.R
\name{combineResults}
\alias{combineResults}
\title{Combine SingleR results}
\usage{
combineResults(results)
}
\arguments{
\item{results}{A list of \linkS4class{DataFrame} prediction results as returned by \code{\link{classifySingleR}} or \code{\link{SingleR}}.}
}
\value{
A \linkS4class{DataFrame}, similar to that returned by \code{\link{classifySingleR}}, where each row corresponds to a cell or cluster.

Fields are:
\itemize{
\item \code{labels}, a character vector containing the collated predicted labels from each prediction in \code{results}.
\item \code{pruned.labels}, a character vector containing the collated pruned labels from each prediction in \code{results}. 
Only added if \code{pruned.labels} are present in at least one prediction in \code{results}. 
\code{NA}s are ignored, though if all \code{pruned.labels} are \code{NA} for a cell, \code{NA} will be returned.
}
}
\description{
Combine results from multiple runs of \code{\link{classifySingleR}} into a single \linkS4class{DataFrame}.
Labels from each prediction are collated, condensing predictions from different reference or label sets.
}
\examples{
##############################
## Mocking up training data ##
##############################

Ngroups <- 5
Ngenes <- 1000
means1 <- matrix(rnorm(Ngenes*Ngroups), nrow=Ngenes)
means2 <- matrix(rnorm(Ngenes*Ngroups), nrow=Ngenes)
means1[1:900,] <- 0
means2[1:900,] <- 0
colnames(means1) <- LETTERS[1:5]
colnames(means2) <- LETTERS[6:10]

g1 <- rep(LETTERS[1:5], each=4)
g2 <- rep(LETTERS[6:10], each=4)
ref1 <- SummarizedExperiment(
    list(counts=matrix(rpois(1000*length(g1), 
        lambda=10*2^means1[,g1]), ncol=length(g1))),
    colData=DataFrame(label=g1)
)
ref2 <- SummarizedExperiment(
    list(counts=matrix(rpois(1000*length(g2), 
        lambda=10*2^means2[,g2]), ncol=length(g2))),
    colData=DataFrame(label=g2)
)
rownames(ref1) <- sprintf("GENE_\%s", seq_len(nrow(ref1)))
rownames(ref2) <- sprintf("GENE_\%s", seq_len(nrow(ref2)))

ref1 <- scater::logNormCounts(ref1)
ref2 <- scater::logNormCounts(ref2)
trained1 <- trainSingleR(ref1, ref1$label)
trained2 <- trainSingleR(ref2, ref2$label)

###############################
## Mocking up some test data ##
###############################

N <- 100
g <- sample(LETTERS[1:5], N, replace=TRUE)
means <- matrix(rnorm(Ngenes*Ngroups), nrow=Ngenes)
means[1:900] <- 0
colnames(means) <- LETTERS[1:5]
test <- SummarizedExperiment(
    list(counts=matrix(rpois(1000*N, lambda=2^means[,g]), ncol=N)),
    colData=DataFrame(label=g)
)

rownames(test) <- sprintf("GENE_\%s", seq_len(nrow(test)))
test <- scater::logNormCounts(test)

###############################
## Performing classification ##
###############################

pred1 <- SingleR(test, ref1, labels=ref1$label)
pred2 <- SingleR(test, ref2, labels=ref2$label)

pred3 <- SingleR(test, ref1, labels=ref1$label, 
    method="cluster", clusters=test$label) 
pred4 <- SingleR(test, ref2, labels=ref2$label, 
    method="cluster", clusters=test$label) 

###############################
##     Combining results     ##
###############################

pred.single <- combineResults(list(pred1, pred2))
pred.clust <- combineResults(list(pred3, pred4))

}
\seealso{
\code{\link{matchReferences}}, to harmonize labels between reference datasets.
\code{\link{SingleR}}, for generating predictions.
}
\author{
Jared Andrews
}
